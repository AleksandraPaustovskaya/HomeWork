// По дереву разбора арифметического выражения вычислить его значение. Дерево разбора хранится в файле в виде (<операция> <операнд1> <операнд2>),
// где <операнд1> и <операнд2> сами могут быть деревьями, либо числами. Например, выражение (1 + 1) * 2 представляется в виде (* (+ 1 1) 2).
// Должны поддерживаться операции +, -, *, / и целые числа в качестве аргументов. Требуется построить дерево в явном виде,
// распечатать его (не обязательно так же, как в файле), и посчитать значение выражения обходом дерева.
// Может быть полезна функция ungetc (если не '(', возвращаем символ в поток и читаем число fscanf-ом).
// Можно считать, что входной файл корректен. Пример - по входному файлу (* (+ 1 1) 2) может печататься ( * ( + 1 1 ) 2 ) и выводиться 4.
//

#include <stdio.h>
#include "tree.h"
#include "test.h"

int main()
{
	if (!test())
	{
		printf("Testing error\n");
		return 1;
	}

	FILE* file = fopen("input.txt", "r");
	if (!file)
	{
		printf("File not found");
		return 1;
	}

	char prefix[1000] = {};
	fgets(prefix, 1000, file);
	fclose(file);

	Tree* tree = build(prefix);
	printf("Prefix expression: ");
	printTree(tree);
	printf("\nResult: %d", calculate(tree));

	deleteTree(tree);
	return 0;
}